name: Release JAR on tag push

on:
  create:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Extraer versión sin 'v' del tag
        id: get_version
        run: echo "version=$(echo ${{ github.ref_name }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Obtener nombre del proyecto raíz de Gradle
        id: get_root_project_name
        run: |
          echo "root_project_name=$(grep -Eo "rootProject\.name\s*=\s*['\"][^'\"]+['\"]" settings.gradle | cut -d '=' -f 2 | tr -d " '\"")" >> $GITHUB_OUTPUT

      - name: Build JAR (Pasando la versión explícitamente)
        run: ./gradlew :app-service:clean :app-service:build -Pversion=${{ steps.get_version.outputs.version }}

      - name: Mostrar archivos generados (verificar el nombre)
        run: ls -R application/app-service/build/libs || echo "Directorio vacío o no existe"

      - name: Crear y Subir Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: "Release generado automáticamente para la versión ${{ steps.get_version.outputs.version }}"
          draft: false
          prerelease: false
          files: application/app-service/build/libs/${{ steps.get_root_project_name.outputs.root_project_name }}-${{ steps.get_version.outputs.version }}.jar